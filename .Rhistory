#Load all possible exchanges
all_exchanges.df <- read_delim("data/master_table_exchanges.txt",delim = "\t") %>%
left_join(Domain_data.df %>% distinct(Aln_pos,Domain,Domain_color)) %>%
mutate(AA_ref = aaa(AA_ref),
AA_alt = convert_aa(AA_alt),
Vartype = ifelse(Vartype == "Stop Gained","Stop-gain", Vartype))
#Load master table
master.df <- read_delim("data/master_table.txt", delim = "\t")
#load domains
Domain_gene.df <- master.df %>%
left_join(Domain_data.df %>% distinct(Aln_pos,Domain,Domain_color)) %>%
distinct(Gene,AA_pos,Domain,Domain_color) %>%
ungroup()
# #PER-2D
# per_family2d.df <- read_delim("data/per2d_genewise.txt", delim = "\t")
#
# per2d_for_var_analysis.df <- read_delim("data/per2d_genewise.txt", delim = "\t")
#
# per2d.df <- read_delim("data/per2d_genewise.txt", delim = "\t") %>%
#   mutate(Hotzone_2D = ifelse(per == "PER","PER","No-PER")) %>%
#   select(Hotzone_2D,AA_pos,pvalue,odds) %>%
#   rename(pvalue_per3d = "pvalue",
#          odds_per3d = "odds")
# #PER-3D
# per3d.df <- read_delim("data/per3d.txt", delim = "\t") %>%
#   select(PER3D,AA_pos,pvalue,odds) %>%
#   rename(pvalue_per2d  = "pvalue",
#          odds_per2d  = "odds")
# #Load functional data
# Functional_data.df <- read_delim("data/Functional_data.txt", delim = "\t") %>%
#   rename(uptake = "GABA uptake (vs wt)",
#          surface_exp = "Surface expression (vs wt)",
#          total_exp = "Total expression (vs wt)",
#          relative_update_surface_exp = "Relative uptake/surface expression",
#          relative_surface_exp_tot_exp = "Relative surface expression/total expression") %>%
#   filter(!is.na(AA_pos),
#          AA_alt != "X") %>%
#   select(AA_pos,AA_alt,uptake,surface_exp,total_exp,relative_update_surface_exp,relative_surface_exp_tot_exp)
#Load patient and control data
Patient_data.df <- read_delim("data/SATB2_Patient_variants_v1.txt", delim = "\t") %>%
select(-Transcript) %>%
mutate(AA_pos = as.numeric(AA_pos)) %>%
#this ensures that splice cite mutation are shown in the genotype overview plot
mutate(cDNA_pos = str_extract(Original_cDNA_change, "[0-9]+") %>% as.numeric()) %>%
left_join(master.df %>%
select(AA_pos,cDNA_pos) %>%
dplyr::rename(AA_pos_splice_site = "AA_pos")) %>%
mutate(AA_pos = ifelse(Vartype == "splice site",AA_pos_splice_site,AA_pos),
AA_alt = ifelse(!is.na(AA_alt) & AA_alt == "STOP","Stop",
ifelse(!is.na(AA_alt),AA_alt,NA))) %>%
##
left_join(master.df %>% distinct(Transcript,Gene,AA_pos), by = c("AA_pos" = "AA_pos","Gene" = "Gene")) %>%
left_join(Domain_gene.df %>% distinct(Domain,Gene,AA_pos,Domain_color), by = c("AA_pos" = "AA_pos","Gene" = "Gene")) %>%
mutate(AA_ref = ifelse(!is.na(AA_ref),AA_ref,"XXX"), #%>% aaa(), ##warnings due to none matching aminoacids are fine
#AA_alt_complex = ifelse(Vartype == "Missense",AA_alt,AA_alt_complex),
cDNA = ifelse(!is.na(cDNA_pos), paste0("c.",cDNA_pos,cDNA_ref,">",cDNA_alt), "Not available"),
#Protein = paste0("p.",AA_ref,AA_pos,AA_alt_complex),
Protein = Original_AA_change) %>%
mutate(rowID = 1:nrow(.)) %>%
na_if("N/A") %>%
mutate(Age_walk_months = as.numeric(Age_walk_months))##used to ensure intersect of res_mod/ resmod_ini does a proper job
Patient_data_missense_only.df <- Patient_data.df %>%
filter(Vartype == "Missense")
# mutate(AA_alt = three_to_one_aa(AA_alt))
Control_data.df <- read_delim("data/gnomad_variants.txt", delim = "\t") %>%
mutate(AA_ref = aaa(AA_ref)) %>% #,
#AA_alt = convert_aa(AA_alt)) %>%
# left_join(per3d.df) %>%
# left_join(per2d.df) %>%
left_join(Domain_gene.df %>% distinct(Domain,Gene,AA_pos,Domain_color), by = c("AA_pos" = "AA_pos","Gene" = "Gene"))
#Load Scores
#Paraz/MTR
# paraz_mtr.df <- read_delim("data/mtr_paraz_slc6a1.txt",delim = "\t")
#hotzones3D on structure
#PER3D_struc.df <- read_delim("data/pdb/6j8e_varburden.txt", delim = "\t")
#Load ClinVar data for Variant Analysis
clinvar.df <- read_delim("data/Clinvar_links_SATB2.txt", delim = "\t")
##### Variables #####
#Basic Information
basic_gene1 = "SATB2"
basic_phenotype_fac = "Epilepsy"
basic_phenotype_num = "Sz_onset"
phenotype_name1 <- "Epilepsy"
phenotype_name2 <- "Seizure onset (months)"
phenotype_name3 <- "Seizure onset (months)"
basic_phenotype_colors <- RColorBrewer::brewer.pal(20,"Set3") # Warning occurs at the moment, can be ignored for now
##add here the colors for all phenotypes
basic_phenotype_colors <- c("Female"="#F97EE5","Male"="#0404B1",
" Yes" ="#F97EE5", "No"= "#0404B1", "Yes" = "#F97EE5",
" None" = "#9191fd","None" = "#9191fd" ,"1 to 10"= "#4747fb" ,"10 to 50" = "#0404b1","Greater than 50" ="#02026a")
basic_phenotype_colors_ID <- c("black","grey","#994714")
basic_phenotype_colors_yes_no <-  c("No" = "grey",
" Yes" = "#EFC56F",
"Yes" = "#EFC56F")
basic_phenotype_colors_speech <- c("10 to 50" = "grey40",
"Greater than 50" = "grey20",
"None" = "grey80",
"1 to 10" = "grey60")
colors_gene1 <-  c("#BEBADA","#FDB462","#BEBADA","#FDB462")
##### Variant Analysis variable #####
variant_title1 <- "Epilepsy"
variant_title2 <- "Autism"
variant_title3 <- "Seizure onset"
#####Research variable #####
Gene_colors <-  c("Patient"="red",
"Control" = "blue",
"Other" = "#333333")
research_phenotype1_title <- "Number of patient variants per unit"
research_phenotype2_title <- "Epilepsy"
research_phenotype3_title <- "Seizure onset"
research_phenotype4_title <- "Autism"
research_phenotype5_title <- "Cognitive development"
research_phenotype6_title <- "Epilepsy syndrome classification"
research_functional1_title <- "Variants with molecular function assessment"
#3d_mapping Genotype interface
pdb_sel_gene1 = "data/pdb/SCN1A_model.pdb1"
structure_coordinates_gene1 <- "data/pdb/7dtd_structure_coordinates.txt"
pdb_sel_gene2 = "data/pdb/SCN2A_model.pdb1"
structure_coordinates_gene2 <- "data/pdb/6j8e_structure_coordinates.txt"
pdb_sel_gene3 = "data/pdb/SCN2A_model.pdb1"
structure_coordinates_gene3 <- "data/pdb/SCN3A_6j8e_structure_coordinates.txt"
pdb_sel_gene4 = "data/pdb/SCN2A_model.pdb1"
structure_coordinates_gene4 <- "data/pdb/SCN8A_6j8e_structure_coordinates.txt"
phenotype <- "Total_speech"
plot_ly(Patient_data.df %>%
dplyr::rename(phenotype_sel = phenotype) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c("None","1 to 10","10 to 50","Greater than 50"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n = n()) %>%
mutate(n_gene = sum(n),
prop = n/n_gene*100)%>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = color_sel,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n, digits = 2), " (" ,n," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
color_sel <- basic_phenotype_colors
plot_ly(Patient_data.df %>%
dplyr::rename(phenotype_sel = phenotype) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c("None","1 to 10","10 to 50","Greater than 50"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n = n()) %>%
mutate(n_gene = sum(n),
prop = n/n_gene*100)%>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = color_sel,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n, digits = 2), " (" ,n," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
save
Patient_data.df %>%
dplyr::rename(phenotype_sel = phenotype) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype))
Patient_data.df %>%
dplyr::rename(phenotype_sel = phenotype) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype)) %>% distinct(phenotype_sel)
plot_ly(Patient_data.df %>%
dplyr::rename(phenotype_sel = phenotype) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c("None","1 to 10","10 to 50","Greater than 50"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n = n()) %>%
mutate(n_gene = sum(n),
prop = n/n_gene*100)%>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = color_sel,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n, digits = 2), " (" ,n," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1 <- plot_ly(data = Patient_data.df %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n/sum(n)) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(per, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
plotty1 <- plot_ly(data = Patient_data.df %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
plotty1 <- plot_ly(data = Patient_data.df %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
plotty1 <- plot_ly(data = Patient_data.df %>%
filter(AA_pos == 116) %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
plotty1 <- plot_ly(data = Patient_data.df %>%
filter(AA_pos == 116,
AA_alt == "Gly") %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
plotty1 <- plot_ly(data = Patient_data.df %>%
filter(AA_pos == 116,
AA_alt == "G") %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1 <- plot_ly(data = Patient_data.df %>%
filter(AA_pos == 116,
AA_alt == "Arg") %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
selected_data.df <- Patient_data.df %>%
dplyr::rename(phenotype_sel = Total_speech) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c("None","1 to 10","10 to 50","Greater than 50"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv)
selected_data.df
tibble(phenotype_sel = c(" None","1 to 10","10 to 50","Greater than 50")
tibble(phenotype_sel = c(" None","1 to 10","10 to 50","Greater than 50"))
selected_data.df <- Patient_data.df %>%
dplyr::rename(phenotype_sel = Total_speech) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
mutate(phenotype_sel = ifelse(phenotype_sel == "None"," None",phenotype_sel)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c(" None","1 to 10","10 to 50","Greater than 50"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv)
tibble(phenotype_sel = c(" None","1 to 10","10 to 50","Greater than 50")) %>%
left_join(selected_data.df)
selected_data.df <- Patient_data.df %>%
filter(AA_pos == 116) %>%
dplyr::rename(phenotype_sel = Total_speech) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
filter(!is.na(phenotype_sel)) %>%
mutate(phenotype_sel = ifelse(phenotype_sel == "None"," None",phenotype_sel)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c(" None","1 to 10","10 to 50","Greater than 50"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100) %>%
assign("save",.,envir = .GlobalEnv)
tibble(phenotype_sel = c(" None","1 to 10","10 to 50","Greater than 50")) %>%
left_join(selected_data.df) %>%
replace(is.na(.),0)
selected_data.df <- Patient_data.df %>%
filter(AA_pos == 116,
AA_alt == "Arg") %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
mutate(phenotype_sel = ifelse(phenotype_sel == "Yes"," Yes",phenotype_sel)) %>%
filter(!is.na(phenotype_sel)) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100)
plotty1 <- plot_ly(data = tibble(phenotype_sel = c("Yes","No")) %>%
left_join(selected_data.df) %>%
replace(is.na(.),0),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
selected_data.df <- Patient_data.df %>%
filter(AA_pos == 116,
AA_alt == "Arg") %>%
dplyr::rename(phenotype_sel = Cleft_palate) %>%
select(phenotype_sel) %>%
arrange(phenotype_sel) %>%
mutate(phenotype_sel = ifelse(phenotype_sel == "Yes"," Yes",phenotype_sel)) %>%
filter(!is.na(phenotype_sel)) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c(" Yes","No"))) %>%
group_by(phenotype_sel) %>%
dplyr::summarise(n_tot = n()) %>%
ungroup() %>%
mutate(prop = n_tot/sum(n_tot)*100)
plotty1 <- plot_ly(data = tibble(phenotype_sel = c("Yes","No")) %>%
left_join(selected_data.df) %>%
replace(is.na(.),0),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
plotty1 <- plot_ly(data = tibble(phenotype_sel = c(" Yes","No")) %>%
mutate(phenotype_sel = factor(phenotype_sel, levels = c(" Yes","No"))) %>%
left_join(selected_data.df) %>%
replace(is.na(.),0),
x = ~ phenotype_sel,
y = ~ round(prop, digits = 2),
color = ~ phenotype_sel,
colors = basic_phenotype_colors,
type = "bar",
hoverinfo = "text", showlegend = FALSE,
text= ~ paste0(round(n_tot, digits = 2), " (" ,n_tot," individuals)")) %>%
layout(title="",
font=plotly_font,
xaxis = list(title="",showline = T, tickangle = 45),
yaxis = list(title="Share of individuals (%)",showline = T),
margin = list(b = 160)) %>%
config(modeBarButtonsToRemove = goodbye, displaylogo = FALSE)
plotty1
runApp()
runApp()
runApp()
runApp()
run
library(shiny)
runApp()
deployApp(account= testportals)
deployApp(account= "testportals")
